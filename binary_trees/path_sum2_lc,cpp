/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void solve(TreeNode* root, int targetSum,vector<int> res,vector<vector<int>> &ans){
        //base case
        if(!root){
            return;
        }
        if(root -> val == targetSum && root -> left == NULL && root -> right == NULL){
            //ans mil gaya dalo ans me last wale node ke data ko leke.
            //res me push kia hai last node pe jispe answer mila hai.
            res.push_back(root -> val);
            ans.push_back(res);
            return;
        }
        
        //agar base case nhi hai to add karo res me aur aage call maro
        res.push_back(root -> val);
        //left call
        solve(root -> left,targetSum - root -> val,res,ans);
        //right call
        solve(root -> right,targetSum - root -> val,res,ans);
        return;
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> res;
        vector<vector<int>> ans;
        solve(root,targetSum,res,ans);
        return ans;    
    }
};